#!/usr/bin/env php
<?php

use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;

/*
|--------------------------------------------------------------------------
| Create The Application
|--------------------------------------------------------------------------
|
| First we need to get an application instance. This creates an instance
| of the application / container and bootstraps the application so it
| is ready to receive HTTP / Console requests from the environment.
|
*/

$app = require __DIR__.'/bootstrap/app.php';

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/
$app->useStoragePath('/tmp/artisonly');

$kernel = $app->make(
    'Illuminate\Contracts\Console\Kernel'
);

/*
 * Modify the command line arguments if the called file is a symlink. 
 * This allows to call sub-commands, directly, e.g. a symlink "inspire"
 * will call "artisan inspire" directly
 */
if(!in_array(basename($_SERVER['argv'][0]), ['artisan', 'artisan.phar'])) {
	array_unshift($_SERVER['argv'], 'artisan');
	$_SERVER['argv'][1] = basename($_SERVER['argv'][1]); 
}

exit($kernel->handle(new ArgvInput, new ConsoleOutput));
